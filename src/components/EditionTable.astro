---
import { readFile } from "node:fs/promises";

interface Meta {
	id: string;
	title: string;
	corpus: string | undefined;
	link: string;
	date: string;
}
const { baseurl } = Astro.props;
const about = await readFile("edition/about.json", "utf-8");
const meta: Record<
	string,
	{
		title: string;
		corpus: string;
	}
> = JSON.parse(about);
const data = [] as Array<Meta>;
for (const [id, { title, corpus }] of Object.entries(meta)) {
	data.push({
		id: id,
		title: title,
		corpus: (() => {
			switch (corpus) {
				case "1":
					return "Alle Ausgaben 18. Jahrhundert";
				case "2":
					return "Ausgewählte Ausgaben Siebenjähriger Krieg";
			}
		})(),
		link: `${baseurl}edition/${id.replace("edoc_wd_", "")}`,
		date: new Date(id.replace("edoc_wd_", "").replace(/_/g, "-")).toLocaleDateString("de-DE"),
	});
}
---

<div id="toc"></div>
<link href="https://unpkg.com/tabulator-tables@6.2.1/dist/css/tabulator.min.css" rel="stylesheet" />
<script
	is:inline
	type="text/javascript"
	src="https://unpkg.com/tabulator-tables@6.2.1/dist/js/tabulator.min.js"></script>
<script is:inline define:vars={{ baseurl, data }}>
	const table = new Tabulator("#toc", {
		height: 800,
		layout: "fitColumns",
		columns: [
			{ title: "Datum", field: "date" },
			{
				title: "Edition",
				field: "corpus",
			},
			{ title: "Titel", field: "title" },
			{
				title: "Link",
				field: "link",
				formatter: "link",
				formatterParams: { label: "Öffnen" },
			},
		],
		data: data,
	});
</script>
